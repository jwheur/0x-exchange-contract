{
    "schemaVersion": "2.0.0",
    "contractName": "ReentrancyGuard",
    "compilerOutput": {
        "abi": [],
        "devdoc": {
            "methods": {}
        },
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object": "0x60806040526000805460ff19169055348015601957600080fd5b50603e8060276000396000f3fe6080604052600080fdfea265627a7a72305820dc3669b17aa2d7861fe4161208f4ef4c1351c10a244fa32438151fb13842173964736f6c634300050a0032",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x27 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xdc CALLDATASIZE PUSH10 0xB17AA2D7861FE4161208 DELEGATECALL 0xef 0x4c SGT MLOAD 0xc1 EXP 0x24 0x4f LOG3 0x24 CODESIZE ISZERO 0x1f 0xb1 CODESIZE TIMESTAMP OR CODECOPY PUSH5 0x736F6C6343 STOP SDIV EXP STOP ORIGIN ",
                "sourceMap": "606:573:4:-;;;689:5;667:27;;-1:-1:-1;;667:27:4;;;606:573;5:2:-1;;;;30:1;27;20:12;5:2;606:573:4;;;;;;;"
            },
            "deployedBytecode": {
                "linkReferences": {},
                "object": "0x6080604052600080fdfea265627a7a72305820dc3669b17aa2d7861fe4161208f4ef4c1351c10a244fa32438151fb13842173964736f6c634300050a0032",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xdc CALLDATASIZE PUSH10 0xB17AA2D7861FE4161208 DELEGATECALL 0xef 0x4c SGT MLOAD 0xc1 EXP 0x24 0x4f LOG3 0x24 CODESIZE ISZERO 0x1f 0xb1 CODESIZE TIMESTAMP OR CODECOPY PUSH5 0x736F6C6343 STOP SDIV EXP STOP ORIGIN ",
                "sourceMap": "606:573:4:-;;;;;"
            }
        }
    },
    "sources": {
        "src/ReentrancyGuard.sol": {
            "id": 4
        }
    },
    "sourceCodes": {
        "src/ReentrancyGuard.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.5.5;\n\n\ncontract ReentrancyGuard {\n\n    // Locked state of mutex\n    bool private locked = false;\n\n    /// @dev Functions with this modifer cannot be reentered. The mutex will be locked\n    ///      before function execution and unlocked after.\n    modifier nonReentrant() {\n        // Ensure mutex is unlocked\n        require(\n            !locked,\n            \"REENTRANCY_ILLEGAL\"\n        );\n\n        // Lock mutex before function call\n        locked = true;\n\n        // Perform function call\n        _;\n\n        // Unlock mutex after function call\n        locked = false;\n    }\n}\n"
    },
    "sourceTreeHashHex": "0x91d27fa8bcdc3c3ddd704166350e83f4e7c6e77524f94794ec199f4104d123a2",
    "compiler": {
        "name": "solc",
        "version": "soljson-v0.5.10+commit.5a6ea5b1.js",
        "settings": {
            "optimizer": {
                "enabled": true,
                "runs": 1000000,
                "details": {
                    "yul": true,
                    "deduplicate": true,
                    "cse": true,
                    "constantOptimizer": true
                }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "constantinople",
            "remappings": []
        }
    },
    "networks": {}
}
