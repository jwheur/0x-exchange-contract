{
    "schemaVersion": "2.0.0",
    "contractName": "ERC1155Proxy",
    "compilerOutput": {
        "abi": [
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "target",
                        "type": "address"
                    }
                ],
                "name": "addAuthorizedAddress",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "name": "authorities",
                "outputs": [
                    {
                        "name": "",
                        "type": "address"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "target",
                        "type": "address"
                    }
                ],
                "name": "removeAuthorizedAddress",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "owner",
                "outputs": [
                    {
                        "name": "",
                        "type": "address"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "target",
                        "type": "address"
                    },
                    {
                        "name": "index",
                        "type": "uint256"
                    }
                ],
                "name": "removeAuthorizedAddressAtIndex",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "getProxyId",
                "outputs": [
                    {
                        "name": "",
                        "type": "bytes4"
                    }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "name": "",
                        "type": "address"
                    }
                ],
                "name": "authorized",
                "outputs": [
                    {
                        "name": "",
                        "type": "bool"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "getAuthorizedAddresses",
                "outputs": [
                    {
                        "name": "",
                        "type": "address[]"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "name": "newOwner",
                        "type": "address"
                    }
                ],
                "name": "transferOwnership",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "fallback"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "name": "target",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "name": "caller",
                        "type": "address"
                    }
                ],
                "name": "AuthorizedAddressAdded",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "name": "target",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "name": "caller",
                        "type": "address"
                    }
                ],
                "name": "AuthorizedAddressRemoved",
                "type": "event"
            }
        ],
        "devdoc": {
            "methods": {
                "addAuthorizedAddress(address)": {
                    "details": "Authorizes an address.",
                    "params": {
                        "target": "Address to authorize."
                    }
                },
                "getAuthorizedAddresses()": {
                    "details": "Gets all authorized addresses.",
                    "return": "Array of authorized addresses."
                },
                "getProxyId()": {
                    "details": "Gets the proxy id associated with the proxy address.",
                    "return": "Proxy id."
                },
                "removeAuthorizedAddress(address)": {
                    "details": "Removes authorizion of an address.",
                    "params": {
                        "target": "Address to remove authorization from."
                    }
                },
                "removeAuthorizedAddressAtIndex(address,uint256)": {
                    "details": "Removes authorizion of an address.",
                    "params": {
                        "index": "Index of target in authorities array.",
                        "target": "Address to remove authorization from."
                    }
                }
            }
        },
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object": "0x6080604052600080546001600160a01b0319163317905561139e806100256000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80639ad2674411610076578063b91816111161005b578063b9181611146107b5578063d39de6e9146107fc578063f2fde38b14610854576100a3565b80639ad267441461073f578063ae25532e14610778576100a3565b806342f1181e14610689578063494503d4146106be57806370712939146107045780638da5cb5b14610737575b7fffffffff00000000000000000000000000000000000000000000000000000000600035167fa85e59e40000000000000000000000000000000000000000000000000000000081141561068357336000526001602052604060002054610174577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c1553454e4445525f4e4f545f415554484f52495a454400000000000000604052600060605260646000fd5b7f2eb2c2d600000000000000000000000000000000000000000000000000000000600052604060246004376004803501803560206004820306608482101715610228577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c19494e56414c49445f41535345545f444154415f4c454e475448000000604052600060605260646000fd5b602081018201368111156102a7577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c16494e56414c49445f41535345545f444154415f454e44000000000000604052600060605260646000fd5b60248301915060a4606435600482036044526044850135840180356020810281602082040315610342577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c1055494e543235365f4f564552464c4f57000000000000000000000000604052600060605260646000fd5b602083019150808201868111156103c4577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c12494e56414c49445f4944535f4f464653455400000000000000000000604052600060605260646000fd5b50602081018386376020810185019450505050600482036064526064850135840180356020810281602082040315610467577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c1055494e543235365f4f564552464c4f57000000000000000000000000604052600060605260646000fd5b602083018181019350868411156104e9577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c15494e56414c49445f56414c5545535f4f464653455400000000000000604052600060605260646000fd5b918552602090940193815b8383101561059257823591508482028286820414861517610580577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c1055494e543235365f4f564552464c4f57000000000000000000000000604052600060605260646000fd5b865260209586019592909201916104f4565b50505050506004810360845260848401358301803593506020810184810184811115610629577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c13494e56414c49445f444154415f4f4646534554000000000000000000604052600060605260646000fd5b5050602084018183375073ffffffffffffffffffffffffffffffffffffffff602485013516926020601f90910181900492508281029190910101600080828180875af1935050505080610680573d6000803e3d6000fd5b50005b50600080fd5b6106bc6004803603602081101561069f57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610887565b005b6106db600480360360208110156106d457600080fd5b5035610a73565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6106bc6004803603602081101561071a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610aa7565b6106db610d9a565b6106bc6004803603604081101561075557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610db6565b610780611167565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b6107e8600480360360208110156107cb57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611188565b604080519115158252519081900360200190f35b61080461119d565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610840578181015183820152602001610828565b505050509050019250505060405180910390f35b6106bc6004803603602081101561086a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661120c565b60005473ffffffffffffffffffffffffffffffffffffffff16331461090d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604090205460ff16156109a257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f5441524745545f414c52454144595f415554484f52495a454400000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116600081815260016020819052604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168317905560028054928301815583527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001684179055513392917f3147867c59d17e8fa9d522465651d44aae0a9e38f902f3475b97e58072f0ed4c91a350565b60028181548110610a8057fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b2d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604090205460ff16610bc157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f5441524745545f4e4f545f415554484f52495a45440000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555b600254811015610d53578173ffffffffffffffffffffffffffffffffffffffff1660028281548110610c3b57fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff161415610d4b57600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8101908110610c9357fe5b6000918252602090912001546002805473ffffffffffffffffffffffffffffffffffffffff9092169183908110610cc657fe5b600091825260209091200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190610d4590826112f2565b50610d53565b600101610c0d565b50604051339073ffffffffffffffffffffffffffffffffffffffff8316907f1f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b090600090a350565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff163314610e3c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205460ff16610ed057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f5441524745545f4e4f545f415554484f52495a45440000000000000000000000604482015290519081900360640190fd5b6002548110610f4057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e4445585f4f55545f4f465f424f554e445300000000000000000000000000604482015290519081900360640190fd5b8173ffffffffffffffffffffffffffffffffffffffff1660028281548110610f6457fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1614610ff257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f415554484f52495a45445f414444524553535f4d49534d415443480000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810190811061106d57fe5b6000918252602090912001546002805473ffffffffffffffffffffffffffffffffffffffff90921691839081106110a057fe5b600091825260209091200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019061111f90826112f2565b50604051339073ffffffffffffffffffffffffffffffffffffffff8416907f1f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b090600090a35050565b6000604051808061133a603091396030019050604051809103902090505b90565b60016020526000908152604090205460ff1681565b6060600280548060200260200160405190810160405280929190818152602001828054801561120257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116111d7575b5050505050905090565b60005473ffffffffffffffffffffffffffffffffffffffff16331461129257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116156112ef57600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555b50565b8154818355818111156113165760008381526020902061131691810190830161131b565b505050565b61118591905b808211156113355760008155600101611321565b509056fe4552433131353541737365747328616464726573732c75696e743235365b5d2c75696e743235365b5d2c627974657329a265627a7a723058202a09bbd49ff5a940e731475fbc6d29fc2754fd8d7dabcfcb8d2aab20204acb5e64736f6c634300050a0032",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x139E DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9AD26744 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0xB9181611 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0x7B5 JUMPI DUP1 PUSH4 0xD39DE6E9 EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x854 JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x9AD26744 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0xAE25532E EQ PUSH2 0x778 JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x42F1181E EQ PUSH2 0x689 JUMPI DUP1 PUSH4 0x494503D4 EQ PUSH2 0x6BE JUMPI DUP1 PUSH4 0x70712939 EQ PUSH2 0x704 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x737 JUMPI JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD AND PUSH32 0xA85E59E400000000000000000000000000000000000000000000000000000000 DUP2 EQ ISZERO PUSH2 0x683 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x174 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x1553454E4445525F4E4F545F415554484F52495A454400000000000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x24 PUSH1 0x4 CALLDATACOPY PUSH1 0x4 DUP1 CALLDATALOAD ADD DUP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x4 DUP3 SUB MOD PUSH1 0x84 DUP3 LT OR ISZERO PUSH2 0x228 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x19494E56414C49445F41535345545F444154415F4C454E475448000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD DUP3 ADD CALLDATASIZE DUP2 GT ISZERO PUSH2 0x2A7 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x16494E56414C49445F41535345545F444154415F454E44000000000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x24 DUP4 ADD SWAP2 POP PUSH1 0xA4 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 DUP3 SUB PUSH1 0x44 MSTORE PUSH1 0x44 DUP6 ADD CALLDATALOAD DUP5 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 MUL DUP2 PUSH1 0x20 DUP3 DIV SUB ISZERO PUSH2 0x342 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x1055494E543235365F4F564552464C4F57000000000000000000000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP1 DUP3 ADD DUP7 DUP2 GT ISZERO PUSH2 0x3C4 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x12494E56414C49445F4944535F4F464653455400000000000000000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 DUP2 ADD DUP4 DUP7 CALLDATACOPY PUSH1 0x20 DUP2 ADD DUP6 ADD SWAP5 POP POP POP POP PUSH1 0x4 DUP3 SUB PUSH1 0x64 MSTORE PUSH1 0x64 DUP6 ADD CALLDATALOAD DUP5 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 MUL DUP2 PUSH1 0x20 DUP3 DIV SUB ISZERO PUSH2 0x467 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x1055494E543235365F4F564552464C4F57000000000000000000000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD DUP2 DUP2 ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x4E9 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x15494E56414C49445F56414C5545535F4F464653455400000000000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST SWAP2 DUP6 MSTORE PUSH1 0x20 SWAP1 SWAP5 ADD SWAP4 DUP2 JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x592 JUMPI DUP3 CALLDATALOAD SWAP2 POP DUP5 DUP3 MUL DUP3 DUP7 DUP3 DIV EQ DUP7 ISZERO OR PUSH2 0x580 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x1055494E543235365F4F564552464C4F57000000000000000000000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x4F4 JUMP JUMPDEST POP POP POP POP POP PUSH1 0x4 DUP2 SUB PUSH1 0x84 MSTORE PUSH1 0x84 DUP5 ADD CALLDATALOAD DUP4 ADD DUP1 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP2 ADD DUP5 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0x629 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x13494E56414C49445F444154415F4F4646534554000000000000000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x20 DUP5 ADD DUP2 DUP4 CALLDATACOPY POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x24 DUP6 ADD CALLDATALOAD AND SWAP3 PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DUP2 SWAP1 DIV SWAP3 POP DUP3 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD PUSH1 0x0 DUP1 DUP3 DUP2 DUP1 DUP8 GAS CALL SWAP4 POP POP POP POP DUP1 PUSH2 0x680 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x887 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x6BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAA7 JUMP JUMPDEST PUSH2 0x6DB PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x6BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0x780 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x7E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x804 PUSH2 0x119D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x840 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x828 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x86A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x120C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x90D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F434F4E54524143545F4F574E455200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5441524745545F414C52454144595F415554484F52495A454400000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP4 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP4 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP5 OR SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x3147867C59D17E8FA9D522465651D44AAE0A9E38F902F3475B97E58072F0ED4C SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA80 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xB2D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F434F4E54524143545F4F574E455200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xBC1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5441524745545F4E4F545F415554484F52495A45440000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xD53 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC3B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD4B JUMPI PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 ADD SWAP1 DUP2 LT PUSH2 0xC93 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xCC6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 PUSH2 0xD45 SWAP1 DUP3 PUSH2 0x12F2 JUMP JUMPDEST POP PUSH2 0xD53 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xC0D JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH32 0x1F32C1B084E2DE0713B8FB16BD46BB9DF710A3DBEAE2F3CA93AF46E016DCC6B0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xE3C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F434F4E54524143545F4F574E455200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xED0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5441524745545F4E4F545F415554484F52495A45440000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP2 LT PUSH2 0xF40 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E4445585F4F55545F4F465F424F554E445300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF64 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFF2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x415554484F52495A45445F414444524553535F4D49534D415443480000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 ADD SWAP1 DUP2 LT PUSH2 0x106D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x10A0 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 PUSH2 0x111F SWAP1 DUP3 PUSH2 0x12F2 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0x1F32C1B084E2DE0713B8FB16BD46BB9DF710A3DBEAE2F3CA93AF46E016DCC6B0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x133A PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x30 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1202 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11D7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1292 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F434F4E54524143545F4F574E455200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x12EF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x1316 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0x1316 SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0x131B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1185 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1335 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1321 JUMP JUMPDEST POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD COINBASE PUSH20 0x7365747328616464726573732C75696E74323536 JUMPDEST 0x5d 0x2c PUSH22 0x696E743235365B5D2C627974657329A265627A7A7230 PC KECCAK256 0x2a MULMOD 0xbb 0xd4 SWAP16 CREATE2 0xa9 BLOCKHASH 0xe7 BALANCE 0x47 0x5f 0xbc PUSH14 0x29FC2754FD8D7DABCFCB8D2AAB20 KECCAK256 0x4a 0xcb 0x5e PUSH5 0x736F6C6343 STOP SDIV EXP STOP ORIGIN ",
                "sourceMap": "641:19593:0:-;;;173:5:15;:18;;-1:-1:-1;;;;;;173:18:15;181:10;173:18;;;641:19593:0;;;;;;"
            },
            "deployedBytecode": {
                "linkReferences": {},
                "object": "0x608060405234801561001057600080fd5b50600436106100a35760003560e01c80639ad2674411610076578063b91816111161005b578063b9181611146107b5578063d39de6e9146107fc578063f2fde38b14610854576100a3565b80639ad267441461073f578063ae25532e14610778576100a3565b806342f1181e14610689578063494503d4146106be57806370712939146107045780638da5cb5b14610737575b7fffffffff00000000000000000000000000000000000000000000000000000000600035167fa85e59e40000000000000000000000000000000000000000000000000000000081141561068357336000526001602052604060002054610174577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c1553454e4445525f4e4f545f415554484f52495a454400000000000000604052600060605260646000fd5b7f2eb2c2d600000000000000000000000000000000000000000000000000000000600052604060246004376004803501803560206004820306608482101715610228577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c19494e56414c49445f41535345545f444154415f4c454e475448000000604052600060605260646000fd5b602081018201368111156102a7577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c16494e56414c49445f41535345545f444154415f454e44000000000000604052600060605260646000fd5b60248301915060a4606435600482036044526044850135840180356020810281602082040315610342577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c1055494e543235365f4f564552464c4f57000000000000000000000000604052600060605260646000fd5b602083019150808201868111156103c4577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c12494e56414c49445f4944535f4f464653455400000000000000000000604052600060605260646000fd5b50602081018386376020810185019450505050600482036064526064850135840180356020810281602082040315610467577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c1055494e543235365f4f564552464c4f57000000000000000000000000604052600060605260646000fd5b602083018181019350868411156104e9577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c15494e56414c49445f56414c5545535f4f464653455400000000000000604052600060605260646000fd5b918552602090940193815b8383101561059257823591508482028286820414861517610580577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c1055494e543235365f4f564552464c4f57000000000000000000000000604052600060605260646000fd5b865260209586019592909201916104f4565b50505050506004810360845260848401358301803593506020810184810184811115610629577f08c379a0000000000000000000000000000000000000000000000000000000006000527c20000000000000000000000000000000000000000000000000000000006020527c13494e56414c49445f444154415f4f4646534554000000000000000000604052600060605260646000fd5b5050602084018183375073ffffffffffffffffffffffffffffffffffffffff602485013516926020601f90910181900492508281029190910101600080828180875af1935050505080610680573d6000803e3d6000fd5b50005b50600080fd5b6106bc6004803603602081101561069f57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610887565b005b6106db600480360360208110156106d457600080fd5b5035610a73565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6106bc6004803603602081101561071a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610aa7565b6106db610d9a565b6106bc6004803603604081101561075557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610db6565b610780611167565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b6107e8600480360360208110156107cb57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611188565b604080519115158252519081900360200190f35b61080461119d565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610840578181015183820152602001610828565b505050509050019250505060405180910390f35b6106bc6004803603602081101561086a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661120c565b60005473ffffffffffffffffffffffffffffffffffffffff16331461090d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604090205460ff16156109a257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f5441524745545f414c52454144595f415554484f52495a454400000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116600081815260016020819052604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168317905560028054928301815583527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001684179055513392917f3147867c59d17e8fa9d522465651d44aae0a9e38f902f3475b97e58072f0ed4c91a350565b60028181548110610a8057fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b2d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604090205460ff16610bc157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f5441524745545f4e4f545f415554484f52495a45440000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555b600254811015610d53578173ffffffffffffffffffffffffffffffffffffffff1660028281548110610c3b57fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff161415610d4b57600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8101908110610c9357fe5b6000918252602090912001546002805473ffffffffffffffffffffffffffffffffffffffff9092169183908110610cc657fe5b600091825260209091200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190610d4590826112f2565b50610d53565b600101610c0d565b50604051339073ffffffffffffffffffffffffffffffffffffffff8316907f1f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b090600090a350565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff163314610e3c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205460ff16610ed057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f5441524745545f4e4f545f415554484f52495a45440000000000000000000000604482015290519081900360640190fd5b6002548110610f4057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e4445585f4f55545f4f465f424f554e445300000000000000000000000000604482015290519081900360640190fd5b8173ffffffffffffffffffffffffffffffffffffffff1660028281548110610f6457fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1614610ff257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f415554484f52495a45445f414444524553535f4d49534d415443480000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810190811061106d57fe5b6000918252602090912001546002805473ffffffffffffffffffffffffffffffffffffffff90921691839081106110a057fe5b600091825260209091200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019061111f90826112f2565b50604051339073ffffffffffffffffffffffffffffffffffffffff8416907f1f32c1b084e2de0713b8fb16bd46bb9df710a3dbeae2f3ca93af46e016dcc6b090600090a35050565b6000604051808061133a603091396030019050604051809103902090505b90565b60016020526000908152604090205460ff1681565b6060600280548060200260200160405190810160405280929190818152602001828054801561120257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116111d7575b5050505050905090565b60005473ffffffffffffffffffffffffffffffffffffffff16331461129257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116156112ef57600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555b50565b8154818355818111156113165760008381526020902061131691810190830161131b565b505050565b61118591905b808211156113355760008155600101611321565b509056fe4552433131353541737365747328616464726573732c75696e743235365b5d2c75696e743235365b5d2c627974657329a265627a7a723058202a09bbd49ff5a940e731475fbc6d29fc2754fd8d7dabcfcb8d2aab20204acb5e64736f6c634300050a0032",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9AD26744 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0xB9181611 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0x7B5 JUMPI DUP1 PUSH4 0xD39DE6E9 EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x854 JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x9AD26744 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0xAE25532E EQ PUSH2 0x778 JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x42F1181E EQ PUSH2 0x689 JUMPI DUP1 PUSH4 0x494503D4 EQ PUSH2 0x6BE JUMPI DUP1 PUSH4 0x70712939 EQ PUSH2 0x704 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x737 JUMPI JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD AND PUSH32 0xA85E59E400000000000000000000000000000000000000000000000000000000 DUP2 EQ ISZERO PUSH2 0x683 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x174 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x1553454E4445525F4E4F545F415554484F52495A454400000000000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x24 PUSH1 0x4 CALLDATACOPY PUSH1 0x4 DUP1 CALLDATALOAD ADD DUP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x4 DUP3 SUB MOD PUSH1 0x84 DUP3 LT OR ISZERO PUSH2 0x228 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x19494E56414C49445F41535345545F444154415F4C454E475448000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD DUP3 ADD CALLDATASIZE DUP2 GT ISZERO PUSH2 0x2A7 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x16494E56414C49445F41535345545F444154415F454E44000000000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x24 DUP4 ADD SWAP2 POP PUSH1 0xA4 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 DUP3 SUB PUSH1 0x44 MSTORE PUSH1 0x44 DUP6 ADD CALLDATALOAD DUP5 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 MUL DUP2 PUSH1 0x20 DUP3 DIV SUB ISZERO PUSH2 0x342 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x1055494E543235365F4F564552464C4F57000000000000000000000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP1 DUP3 ADD DUP7 DUP2 GT ISZERO PUSH2 0x3C4 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x12494E56414C49445F4944535F4F464653455400000000000000000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 DUP2 ADD DUP4 DUP7 CALLDATACOPY PUSH1 0x20 DUP2 ADD DUP6 ADD SWAP5 POP POP POP POP PUSH1 0x4 DUP3 SUB PUSH1 0x64 MSTORE PUSH1 0x64 DUP6 ADD CALLDATALOAD DUP5 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 MUL DUP2 PUSH1 0x20 DUP3 DIV SUB ISZERO PUSH2 0x467 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x1055494E543235365F4F564552464C4F57000000000000000000000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD DUP2 DUP2 ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x4E9 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x15494E56414C49445F56414C5545535F4F464653455400000000000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST SWAP2 DUP6 MSTORE PUSH1 0x20 SWAP1 SWAP5 ADD SWAP4 DUP2 JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x592 JUMPI DUP3 CALLDATALOAD SWAP2 POP DUP5 DUP3 MUL DUP3 DUP7 DUP3 DIV EQ DUP7 ISZERO OR PUSH2 0x580 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x1055494E543235365F4F564552464C4F57000000000000000000000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x4F4 JUMP JUMPDEST POP POP POP POP POP PUSH1 0x4 DUP2 SUB PUSH1 0x84 MSTORE PUSH1 0x84 DUP5 ADD CALLDATALOAD DUP4 ADD DUP1 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP2 ADD DUP5 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH2 0x629 JUMPI PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH29 0x2000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH29 0x13494E56414C49445F444154415F4F4646534554000000000000000000 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x20 DUP5 ADD DUP2 DUP4 CALLDATACOPY POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x24 DUP6 ADD CALLDATALOAD AND SWAP3 PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DUP2 SWAP1 DIV SWAP3 POP DUP3 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD PUSH1 0x0 DUP1 DUP3 DUP2 DUP1 DUP8 GAS CALL SWAP4 POP POP POP POP DUP1 PUSH2 0x680 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP STOP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x887 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x6BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAA7 JUMP JUMPDEST PUSH2 0x6DB PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x6BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0x780 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x7E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x804 PUSH2 0x119D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x840 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x828 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x86A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x120C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x90D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F434F4E54524143545F4F574E455200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5441524745545F414C52454144595F415554484F52495A454400000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP4 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP4 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP5 OR SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x3147867C59D17E8FA9D522465651D44AAE0A9E38F902F3475B97E58072F0ED4C SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA80 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xB2D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F434F4E54524143545F4F574E455200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xBC1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5441524745545F4E4F545F415554484F52495A45440000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xD53 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC3B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD4B JUMPI PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 ADD SWAP1 DUP2 LT PUSH2 0xC93 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xCC6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 PUSH2 0xD45 SWAP1 DUP3 PUSH2 0x12F2 JUMP JUMPDEST POP PUSH2 0xD53 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xC0D JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH32 0x1F32C1B084E2DE0713B8FB16BD46BB9DF710A3DBEAE2F3CA93AF46E016DCC6B0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xE3C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F434F4E54524143545F4F574E455200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xED0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5441524745545F4E4F545F415554484F52495A45440000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP2 LT PUSH2 0xF40 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E4445585F4F55545F4F465F424F554E445300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF64 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFF2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x415554484F52495A45445F414444524553535F4D49534D415443480000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 ADD SWAP1 DUP2 LT PUSH2 0x106D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x10A0 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 PUSH2 0x111F SWAP1 DUP3 PUSH2 0x12F2 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0x1F32C1B084E2DE0713B8FB16BD46BB9DF710A3DBEAE2F3CA93AF46E016DCC6B0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x133A PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x30 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1202 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11D7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1292 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F4E4C595F434F4E54524143545F4F574E455200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x12EF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x1316 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0x1316 SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0x131B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1185 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1335 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1321 JUMP JUMPDEST POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD COINBASE PUSH20 0x7365747328616464726573732C75696E74323536 JUMPDEST 0x5d 0x2c PUSH22 0x696E743235365B5D2C627974657329A265627A7A7230 PC KECCAK256 0x2a MULMOD 0xbb 0xd4 SWAP16 CREATE2 0xa9 BLOCKHASH 0xe7 BALANCE 0x47 0x5f 0xbc PUSH14 0x29FC2754FD8D7DABCFCB8D2AAB20 KECCAK256 0x4a 0xcb 0x5e PUSH5 0x736F6C6343 STOP SDIV EXP STOP ORIGIN ",
                "sourceMap": "641:19593:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;641:19593:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6088:66;6084:1;6071:15;6067:88;6550:66;6540:8;6537:80;6534:2;;;6837:6;6834:1;6827:17;6872:15;6868:2;6861:27;6997:2;6994:1;6984:16;6978:23;6968:2;;7103:66;7100:1;7093:77;7202:66;7198:2;7191:78;7301:66;7297:2;7290:78;7400:1;7396:2;7389:13;7433:3;7430:1;7423:14;6968:2;8172:66;8169:1;8162:77;8571:2;8496;8386:1;8352:297;9236:1;9232;9219:15;9215:23;9347:15;9334:29;9638:2;9634:1;9617:15;9613:23;9609:32;9603:3;9586:15;9583:24;9580:62;9577:2;;;9747:66;9744:1;9737:77;9846:66;9842:2;9835:78;9945:66;9941:2;9934:78;10044:1;10040:2;10033:13;10077:3;10074:1;10067:14;9577:2;10268;10251:15;10247:24;10230:15;10226:46;10309:14;10295:12;10292:32;10289:2;;;10426:66;10423:1;10416:77;10525:66;10521:2;10514:78;10624:66;10620:2;10613:78;10723:1;10719:2;10712:13;10756:3;10753:1;10746:14;10289:2;10915;10898:15;10894:24;10863:55;;11084:3;11188;11175:17;11364:1;11345:17;11341:25;11337:2;11330:37;11525:2;11508:15;11504:24;11491:38;11466:23;11462:68;11577:9;11564:23;11643:2;11632:9;11628:18;11697:9;11692:2;11674:16;11670:25;11666:41;11663:2;;;11803:66;11800:1;11793:77;11902:66;11898:2;11891:78;12001:66;11997:2;11990:78;12100:1;12096:2;12089:13;12133:3;12130:1;12123:14;11663:2;12279;12268:9;12264:18;12248:34;;12327:16;12317:8;12313:31;12375:12;12367:6;12364:24;12361:2;;;12486:66;12483:1;12476:77;12585:66;12581:2;12574:78;12684:66;12680:2;12673:78;12783:1;12779:2;12772:13;12816:3;12813:1;12806:14;12361:2;;13061;13043:16;13039:25;13008:9;12969:17;12935:147;13165:2;13147:16;13143:25;13124:17;13120:49;13099:70;;;;;13344:1;13325:17;13321:25;13316:3;13309:38;13511:3;13494:15;13490:25;13477:39;13452:23;13448:69;13567:12;13554:26;13642:2;13628:12;13624:21;13699:12;13694:2;13673:19;13669:28;13665:47;13662:2;;;13808:66;13805:1;13798:77;13907:66;13903:2;13896:78;14006:66;14002:2;13995:78;14105:1;14101:2;14094:13;14138:3;14135:1;14128:14;13662:2;14293;14279:12;14275:21;14347:19;14334:11;14330:37;14313:54;;14401:12;14390:9;14387:27;14384:2;;;14515:66;14512:1;14505:77;14614:66;14610:2;14603:78;14713:66;14709:2;14702:78;14812:1;14808:2;14801:13;14845:3;14842:1;14835:14;14384:2;14929:39;;;15029:2;15006:26;;;;15138:11;15106:1362;15195:9;15175:18;15172:33;15106:1362;;;15411:18;15398:32;15378:52;;15495:6;15481:12;15477:25;15728:12;15719:6;15699:18;15695:31;15692:49;15659:6;15652:14;15624:139;15614:2;;15868:66;15865:1;15858:77;15971:66;15967:2;15960:78;16074:66;16070:2;16063:78;16177:1;16173:2;16166:13;16214:3;16211:1;16204:14;15614:2;16337:45;;16447:2;16424:26;;;;15250:27;;;;;15106:1362;;;15110:41;;;;;16641:1;16622:17;16618:25;16613:3;16606:38;16819:3;16802:15;16798:25;16785:39;16760:23;16756:69;16880:10;16867:24;16842:49;;16941:2;16929:10;16925:19;16991:17;16980:9;16976:33;17041:12;17032:7;17029:25;17026:2;;;17153:66;17150:1;17143:77;17252:66;17248:2;17241:78;17351:66;17347:2;17340:78;17450:1;17446:2;17439:13;17483:3;17480:1;17473:14;17026:2;;;17731;17712:17;17708:26;17676:10;17637:17;17603:149;-1:-1:-1;18459:66:0;18433:2;18412:24;;18399:38;18374:169;;17895:2;17890;17867:26;;;17863:35;;;;-1:-1:-1;17951:26:0;;;18015:61;;;;;19291:1;;18015:61;19291:1;;18374:169;18721:3;18695:684;18680:699;;;;;19495:7;19485:2;;19703:16;19631:1;19566;19526:240;19797:16;19794:1;19787:27;19485:2;-1:-1:-1;19899:12:0;6534:2;;20003:1;20000;19993:12;1159:320:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1159:320:4;;;;:::i;:::-;;1044:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1044:28:4;;:::i;:::-;;;;;;;;;;;;;;;;;;;1593:547;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1593:547:4;;;;:::i;102:20:15:-;;;:::i;2313:643:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2313:643:4;;;;;;;;;:::i;20119:113:0:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;995:43:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;995:43:4;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3053:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3053:138:4;;;;;;;;;;;;;;;;;344:167:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;344:167:15;;;;:::i;1159:320:4:-;270:5:15;;;;256:10;:19;235:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1276:18:4;;;;;;;:10;:18;;;;;;;;1275:19;1254:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1356:18;;;;;;;1377:4;1356:18;;;;;;;;:25;;;;;;;;1391:11;27:10:-1;;23:18;;;45:23;;1391:24:4;;;;;;;;;;;;;;1430:42;1461:10;;1356:18;1430:42;;;1159:320;:::o;1044:28::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1044:28:4;:::o;1593:547::-;270:5:15;;;;256:10;:19;235:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1712:18:4;;;;;;;:10;:18;;;;;;;;1691:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:18;;;;;;;:10;:18;;;;;1788:25;;;;;;1823:252;1847:11;:18;1843:22;;1823:252;;;1908:6;1890:24;;:11;1902:1;1890:14;;;;;;;;;;;;;;;;;;;;:24;1886:179;;;1951:11;1963:18;;:22;;;;1951:35;;;;;;;;;;;;;;;;1934:11;:14;;1951:35;;;;;1946:1;;1934:14;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;2004:11;:23;;;;;;;;;:::i;:::-;;2045:5;;1886:179;1867:3;;1823:252;;;-1:-1:-1;2089:44:4;;2122:10;;2089:44;;;;;;;;;1593:547;:::o;102:20:15:-;;;;;;:::o;2313:643:4:-;270:5:15;;;;256:10;:19;235:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2476:18:4;;;;;;;:10;:18;;;;;;;;2455:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2580:11;:18;2572:26;;2551:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2696:6;2674:28;;:11;2686:5;2674:18;;;;;;;;;;;;;;;;;;;;:28;2653:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2773:18;;;;;;;:10;:18;;;;;2766:25;;;;;;2822:11;2834:18;;:22;;;;2822:35;;;;;;;;;;;;;;;;2801:11;:18;;2822:35;;;;;2813:5;;2801:18;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;2867:11;:23;;;;;;;;;:::i;:::-;-1:-1:-1;2905:44:4;;2938:10;;2905:44;;;;;;;;;2313:643;;:::o;20119:113:0:-;20188:6;763:61;;;;;;;;;;;;;;;;;;;20210:15;;20119:113;;:::o;995:43:4:-;;;;;;;;;;;;;;;:::o;3053:138::-;3134:16;3173:11;3166:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3053:138;:::o;344:167:15:-;270:5;;;;256:10;:19;235:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;440:22;;;;436:69;;478:5;:16;;;;;;;;;;436:69;344:167;:::o;641:19593:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;"
            }
        }
    },
    "sources": {
        "src/ERC1155Proxy.sol": {
            "id": 0
        },
        "src/MixinAuthorizable.sol": {
            "id": 4
        },
        "@0x/contracts-utils/contracts/src/Ownable.sol": {
            "id": 15
        },
        "@0x/contracts-utils/contracts/src/interfaces/IOwnable.sol": {
            "id": 16
        },
        "src/mixins/MAuthorizable.sol": {
            "id": 12
        },
        "src/interfaces/IAuthorizable.sol": {
            "id": 10
        }
    },
    "sourceCodes": {
        "src/ERC1155Proxy.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.5.9;\n\nimport \"./MixinAuthorizable.sol\";\n\n\ncontract ERC1155Proxy is\n    MixinAuthorizable\n{\n\n    // Id of this proxy.\n    bytes4 constant internal PROXY_ID = bytes4(keccak256(\"ERC1155Assets(address,uint256[],uint256[],bytes)\"));\n\n    // solhint-disable-next-line payable-fallback\n    function () \n        external\n    {\n        // Input calldata to this function is encoded as follows:\n        //                      -- TABLE #1 --\n        // | Area     | Offset (**) | Length      | Contents                        |\n        // |----------|-------------|-------------|---------------------------------|\n        // | Header   | 0           | 4           | function selector               |\n        // | Params   |             | 4 * 32      | function parameters:            |\n        // |          | 4           |             |   1. offset to assetData (*)    |\n        // |          | 36          |             |   2. from                       |\n        // |          | 68          |             |   3. to                         |\n        // |          | 100         |             |   4. amount                     |\n        // | Data     |             |             | assetData:                      |\n        // |          | 132         | 32          | assetData Length                |\n        // |          | 164         | (see below) | assetData Contents              |\n        //\n        //\n        // Asset data is encoded as follows:\n        //                      -- TABLE #2 --\n        // | Area     | Offset      | Length  | Contents                            |\n        // |----------|-------------|---------|-------------------------------------|\n        // | Header   | 0           | 4       | assetProxyId                        |\n        // | Params   |             | 4 * 32  | function parameters:                |\n        // |          | 4           |         |   1. address of ERC1155 contract    |\n        // |          | 36          |         |   2. offset to ids (*)              |\n        // |          | 68          |         |   3. offset to values (*)           |\n        // |          | 100         |         |   4. offset to data (*)             |\n        // | Data     |             |         | ids:                                |\n        // |          | 132         | 32      |   1. ids Length                     |\n        // |          | 164         | a       |   2. ids Contents                   |\n        // |          |             |         | values:                             |\n        // |          | 164 + a     | 32      |   1. values Length                  |\n        // |          | 196 + a     | b       |   2. values Contents                |\n        // |          |             |         | data:                               |\n        // |          | 196 + a + b | 32      |   1. data Length                    |\n        // |          | 228 + a + b | c       |   2. data Contents                  |\n        //\n        //\n        // Calldata for target ERC155 asset is encoded for safeBatchTransferFrom:\n        //                      -- TABLE #3 --\n        // | Area     | Offset (**) | Length  | Contents                            |\n        // |----------|-------------|---------|-------------------------------------|\n        // | Header   | 0           | 4       | safeBatchTransferFrom selector      |\n        // | Params   |             | 5 * 32  | function parameters:                |\n        // |          | 4           |         |   1. from address                   |\n        // |          | 36          |         |   2. to address                     |\n        // |          | 68          |         |   3. offset to ids (*)              |\n        // |          | 100         |         |   4. offset to values (*)           |\n        // |          | 132         |         |   5. offset to data (*)             |\n        // | Data     |             |         | ids:                                |\n        // |          | 164         | 32      |   1. ids Length                     |\n        // |          | 196         | a       |   2. ids Contents                   |\n        // |          |             |         | values:                             |\n        // |          | 196 + a     | 32      |   1. values Length                  |\n        // |          | 228 + a     | b       |   2. values Contents                |\n        // |          |             |         | data:                               |\n        // |          | 228 + a + b | 32      |   1. data Length                    |\n        // |          | 260 + a + b | c       |   2. data Contents                  |\n        //\n        //\n        // (*): offset is computed from start of function parameters, so offset\n        //      by an additional 4 bytes in the calldata.\n        //\n        // (**): the `Offset` column is computed assuming no calldata compression;\n        //       offsets in the Data Area are dynamic and should be evaluated in\n        //       real-time.\n        //\n        // WARNING: The ABIv2 specification allows additional padding between\n        //          the Params and Data section. This will result in a larger\n        //          offset to assetData.\n        //\n        // Note: Table #1 and Table #2 exist in Calldata. We construct Table #3 in memory.\n        //\n        //\n        assembly {\n            // The first 4 bytes of calldata holds the function selector\n            let selector := and(calldataload(0), 0xffffffff00000000000000000000000000000000000000000000000000000000)\n\n            // `transferFrom` will be called with the following parameters:\n            // assetData Encoded byte array.\n            // from Address to transfer asset from.\n            // to Address to transfer asset to.\n            // amount Amount of asset to transfer.\n            // bytes4(keccak256(\"transferFrom(bytes,address,address,uint256)\")) = 0xa85e59e4\n            if eq(selector, 0xa85e59e400000000000000000000000000000000000000000000000000000000) {\n\n                // To lookup a value in a mapping, we load from the storage location keccak256(k, p),\n                // where k is the key left padded to 32 bytes and p is the storage slot\n                mstore(0, caller)\n                mstore(32, authorized_slot)\n\n                 // Revert if authorized[msg.sender] == false\n                if iszero(sload(keccak256(0, 64))) {\n                    // Revert with `Error(\"SENDER_NOT_AUTHORIZED\")`\n                    mstore(0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n                    mstore(32, 0x0000002000000000000000000000000000000000000000000000000000000000)\n                    mstore(64, 0x0000001553454e4445525f4e4f545f415554484f52495a454400000000000000)\n                    mstore(96, 0)\n                    revert(0, 100)\n                }\n\n                // Construct Table #3 in memory, starting at memory offset 0.\n                // The algorithm below maps calldata (Table #1) and assetData (Table #2) to memory (Table #3).\n                // Once Table #3 ha been constructed in memory, the destination erc1155 contract is called using this\n                // as its calldata. This process is divided into three steps, below.\n\n                ////////// STEP 1/3 - Map calldata to memory (Table #1 -> Table #3) //////////\n\n                // Store the safeBatchTransferFrom function selector, which is computed using:\n                // bytes4(keccak256(\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\"))\n                mstore(0, 0x2eb2c2d600000000000000000000000000000000000000000000000000000000)\n\n                // Copy `from` and `to` fields from calldata (Table #1) into memory (Table #3)\n                calldatacopy(\n                    4,          // aligned such that `from` and `to` are at the correct location for Table #3\n                    36,         // beginning of `from` field from Table #1\n                    64          // 32 bytes for `from` + 32 bytes for `to` field\n                )\n\n                ////////// STEP 2/3 - Map assetData to memory (Table #2 -> Table #3) //////////\n\n                // Map relevant fields from assetData (Table #2) into memory (Table #3)\n                // The Contents column of Table #2 is the same as Table #3,\n                // beginning from parameter 3 - `offset to ids (*)`\n                // The `values` from assetData (Table #2) are multiplied by `amount` (Table #1)\n                // when they are copied into memory.\n\n                // Load offset to `assetData`\n                let assetDataOffset := add(calldataload(4), 4)\n\n                // Load length in bytes of `assetData`\n                let assetDataLength := calldataload(assetDataOffset)\n\n                // Assert that the length of asset data:\n                // 1. Must be at least 132 bytes (Table #2)\n                // 2. Must be a multiple of 32 (excluding the 4-byte selector)\n                if or(lt(assetDataLength, 132), mod(sub(assetDataLength, 4), 32)) {\n                    // Revert with `Error(\"INVALID_ASSET_DATA_LENGTH\")`\n                    mstore(0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n                    mstore(32, 0x0000002000000000000000000000000000000000000000000000000000000000)\n                    mstore(64, 0x00000019494e56414c49445f41535345545f444154415f4c454e475448000000)\n                    mstore(96, 0)\n                    revert(0, 100)\n                }\n\n                // End of asset data in calldata\n                // +32 for length field\n                let assetDataEnd := add(assetDataOffset, add(assetDataLength, 32))\n                if gt(assetDataEnd, calldatasize()) {\n                    // Revert with `Error(\"INVALID_ASSET_DATA_END\")`\n                    mstore(0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n                    mstore(32, 0x0000002000000000000000000000000000000000000000000000000000000000)\n                    mstore(64, 0x00000016494e56414c49445f41535345545f444154415f454e44000000000000)\n                    mstore(96, 0)\n                    revert(0, 100)\n                }\n\n                // Load offset to parameters section in asset data\n                let paramsInAssetDataOffset := add(assetDataOffset, 36)\n\n                // Offset of end of Data Area in memory.\n                // This value will grow as we construct Table #3.\n                let dataAreaEndOffset := 164\n\n                // Load amount by which to scale values\n                let amount := calldataload(100)\n\n                // Store pointer to `ids` (Table #3)\n                // Subtract 4 for `safeBatchTransferFrom` selector\n                mstore(68, sub(dataAreaEndOffset, 4))\n\n                // Ensure length of `ids` does not overflow\n                let idsOffset := add(paramsInAssetDataOffset, calldataload(add(assetDataOffset, 68)))\n                let idsLength := calldataload(idsOffset)\n                let idsLengthInBytes := mul(idsLength, 32)\n                if sub(div(idsLengthInBytes, 32), idsLength) {\n                    // Revert with `Error(\"UINT256_OVERFLOW\")`\n                    mstore(0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n                    mstore(32, 0x0000002000000000000000000000000000000000000000000000000000000000)\n                    mstore(64, 0x0000001055494e543235365f4f564552464c4f57000000000000000000000000)\n                    mstore(96, 0)\n                    revert(0, 100)\n                }\n\n                // Ensure `ids` does not resolve to outside of `assetData`\n                let idsBegin := add(idsOffset, 32)\n                let idsEnd := add(idsBegin, idsLengthInBytes)\n                if gt(idsEnd, assetDataEnd) {\n                    // Revert with `Error(\"INVALID_IDS_OFFSET\")`\n                    mstore(0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n                    mstore(32, 0x0000002000000000000000000000000000000000000000000000000000000000)\n                    mstore(64, 0x00000012494e56414c49445f4944535f4f464653455400000000000000000000)\n                    mstore(96, 0)\n                    revert(0, 100)\n                }\n\n                // Copy `ids` from `assetData` (Table #2) to memory (Table #3)\n                calldatacopy(\n                    dataAreaEndOffset,\n                    idsOffset,\n                    add(idsLengthInBytes, 32)\n                )\n                dataAreaEndOffset := add(dataAreaEndOffset, add(idsLengthInBytes, 32))\n\n                // Store pointer to `values` (Table #3)\n                // Subtract 4 for `safeBatchTrasferFrom` selector\n                mstore(100, sub(dataAreaEndOffset, 4))\n\n                // Ensure length of `values` does not overflow\n                let valuesOffset := add(paramsInAssetDataOffset, calldataload(add(assetDataOffset, 100)))\n                let valuesLength := calldataload(valuesOffset)\n                let valuesLengthInBytes := mul(valuesLength, 32)\n                if sub(div(valuesLengthInBytes, 32), valuesLength) {\n                    // Revert with `Error(\"UINT256_OVERFLOW\")`\n                    mstore(0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n                    mstore(32, 0x0000002000000000000000000000000000000000000000000000000000000000)\n                    mstore(64, 0x0000001055494e543235365f4f564552464c4f57000000000000000000000000)\n                    mstore(96, 0)\n                    revert(0, 100)\n                }\n\n                // Ensure `values` does not resolve to outside of `assetData`\n                let valuesBegin := add(valuesOffset, 32)\n                let valuesEnd := add(valuesBegin, valuesLengthInBytes)\n                if gt(valuesEnd, assetDataEnd) {\n                    // Revert with `Error(\"INVALID_VALUES_OFFSET\")`\n                    mstore(0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n                    mstore(32, 0x0000002000000000000000000000000000000000000000000000000000000000)\n                    mstore(64, 0x00000015494e56414c49445f56414c5545535f4f464653455400000000000000)\n                    mstore(96, 0)\n                    revert(0, 100)\n                }\n\n                // Store length of `values`\n                mstore(dataAreaEndOffset, valuesLength)\n                dataAreaEndOffset := add(dataAreaEndOffset, 32)\n\n                // Scale and store elements of `values`\n                for { let currentValueOffset := valuesBegin }\n                    lt(currentValueOffset, valuesEnd)\n                    { currentValueOffset := add(currentValueOffset, 32) }\n                {\n                    // Load value and generate scaled value\n                    let currentValue := calldataload(currentValueOffset)\n                    let currentValueScaled := mul(currentValue, amount)\n\n                    // Revert if `amount` != 0 and multiplication resulted in an overflow\n                    if iszero(or(\n                        iszero(amount),\n                        eq(div(currentValueScaled, amount), currentValue)\n                    )) {\n                        // Revert with `Error(\"UINT256_OVERFLOW\")`\n                        mstore(0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n                        mstore(32, 0x0000002000000000000000000000000000000000000000000000000000000000)\n                        mstore(64, 0x0000001055494e543235365f4f564552464c4f57000000000000000000000000)\n                        mstore(96, 0)\n                        revert(0, 100)\n                    }\n\n                    // There was no overflow, store the scaled token value\n                    mstore(dataAreaEndOffset, currentValueScaled)\n                    dataAreaEndOffset := add(dataAreaEndOffset, 32)\n                }\n\n                // Store pointer to `data` (Table #3)\n                // Subtract 4 for `safeBatchTrasferFrom` selector\n                mstore(132, sub(dataAreaEndOffset, 4))\n\n                // Ensure `data` does not resolve to outside of `assetData`\n                let dataOffset := add(paramsInAssetDataOffset, calldataload(add(assetDataOffset, 132)))\n                let dataLengthInBytes := calldataload(dataOffset)\n                let dataBegin := add(dataOffset, 32)\n                let dataEnd := add(dataBegin, dataLengthInBytes)\n                if gt(dataEnd, assetDataEnd) {\n                    // Revert with `Error(\"INVALID_DATA_OFFSET\")`\n                    mstore(0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n                    mstore(32, 0x0000002000000000000000000000000000000000000000000000000000000000)\n                    mstore(64, 0x00000013494e56414c49445f444154415f4f4646534554000000000000000000)\n                    mstore(96, 0)\n                    revert(0, 100)\n                }\n\n                // Copy `data` from `assetData` (Table #2) to memory (Table #3)\n                calldatacopy(\n                    dataAreaEndOffset,\n                    dataOffset,\n                    add(dataLengthInBytes, 32)\n                )\n\n                // Update the end of data offset to be word-aligned\n                let dataLengthInWords := div(add(dataLengthInBytes, 31), 32)\n                let dataLengthInBytesWordAligned := mul(dataLengthInWords, 32)\n                dataAreaEndOffset := add(dataAreaEndOffset, add(dataLengthInBytesWordAligned, 32))\n\n                ////////// STEP 3/3 - Execute Transfer //////////\n                // Load the address of the destination erc1155 contract from asset data (Table #2)\n                // +32 bytes for assetData Length\n                // +4 bytes for assetProxyId\n                let assetAddress := and(\n                    calldataload(add(assetDataOffset, 36)),\n                    0x000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\n                )\n\n                // Call into the destination erc1155 contract using as calldata Table #3 (constructed in-memory above)\n                let success := call(\n                    gas,                                    // forward all gas\n                    assetAddress,                           // call address of erc1155 asset\n                    0,                                      // don't send any ETH\n                    0,                                      // pointer to start of input\n                    dataAreaEndOffset,                      // length of input is the end of the Data Area (Table #3)\n                    0,                                      // write output over memory that won't be reused\n                    0                                       // don't copy output to memory\n                )\n\n                // Revert with reason given by AssetProxy if `transferFrom` call failed\n                if iszero(success) {\n                    returndatacopy(\n                        0,                // copy to memory at 0\n                        0,                // copy from return data at 0\n                        returndatasize()  // copy all return data\n                    )\n                    revert(0, returndatasize())\n                }\n\n                // Return if call was successful\n                return(0, 0)\n            }\n\n            // Revert if undefined function is called\n            revert(0, 0)\n        }\n    }\n\n    /// @dev Gets the proxy id associated with the proxy address.\n    /// @return Proxy id.\n    function getProxyId()\n        external\n        pure\n        returns (bytes4)\n    {\n        return PROXY_ID;\n    }\n}\n",
        "src/MixinAuthorizable.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.5.5;\n\nimport \"@0x/contracts-utils/contracts/src/Ownable.sol\";\nimport \"./mixins/MAuthorizable.sol\";\n\n\ncontract MixinAuthorizable is\n    Ownable,\n    MAuthorizable\n{\n    /// @dev Only authorized addresses can invoke functions with this modifier.\n    modifier onlyAuthorized {\n        require(\n            authorized[msg.sender],\n            \"SENDER_NOT_AUTHORIZED\"\n        );\n        _;\n    }\n\n    mapping (address => bool) public authorized;\n    address[] public authorities;\n\n    /// @dev Authorizes an address.\n    /// @param target Address to authorize.\n    function addAuthorizedAddress(address target)\n        external\n        onlyOwner\n    {\n        require(\n            !authorized[target],\n            \"TARGET_ALREADY_AUTHORIZED\"\n        );\n\n        authorized[target] = true;\n        authorities.push(target);\n        emit AuthorizedAddressAdded(target, msg.sender);\n    }\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    function removeAuthorizedAddress(address target)\n        external\n        onlyOwner\n    {\n        require(\n            authorized[target],\n            \"TARGET_NOT_AUTHORIZED\"\n        );\n\n        delete authorized[target];\n        for (uint256 i = 0; i < authorities.length; i++) {\n            if (authorities[i] == target) {\n                authorities[i] = authorities[authorities.length - 1];\n                authorities.length -= 1;\n                break;\n            }\n        }\n        emit AuthorizedAddressRemoved(target, msg.sender);\n    }\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    /// @param index Index of target in authorities array.\n    function removeAuthorizedAddressAtIndex(\n        address target,\n        uint256 index\n    )\n        external\n        onlyOwner\n    {\n        require(\n            authorized[target],\n            \"TARGET_NOT_AUTHORIZED\"\n        );\n        require(\n            index < authorities.length,\n            \"INDEX_OUT_OF_BOUNDS\"\n        );\n        require(\n            authorities[index] == target,\n            \"AUTHORIZED_ADDRESS_MISMATCH\"\n        );\n\n        delete authorized[target];\n        authorities[index] = authorities[authorities.length - 1];\n        authorities.length -= 1;\n        emit AuthorizedAddressRemoved(target, msg.sender);\n    }\n\n    /// @dev Gets all authorized addresses.\n    /// @return Array of authorized addresses.\n    function getAuthorizedAddresses()\n        external\n        view\n        returns (address[] memory)\n    {\n        return authorities;\n    }\n}\n",
        "@0x/contracts-utils/contracts/src/Ownable.sol": "pragma solidity ^0.5.5;\n\nimport \"./interfaces/IOwnable.sol\";\n\n\ncontract Ownable is\n    IOwnable\n{\n    address public owner;\n\n    constructor ()\n        public\n    {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(\n            msg.sender == owner,\n            \"ONLY_CONTRACT_OWNER\"\n        );\n        _;\n    }\n\n    function transferOwnership(address newOwner)\n        public\n        onlyOwner\n    {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n}\n",
        "@0x/contracts-utils/contracts/src/interfaces/IOwnable.sol": "pragma solidity ^0.5.5;\n\n\ncontract IOwnable {\n\n    function transferOwnership(address newOwner)\n        public;\n}\n",
        "src/mixins/MAuthorizable.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.5.5;\n\nimport \"../interfaces/IAuthorizable.sol\";\n\n\ncontract MAuthorizable is\n    IAuthorizable\n{\n    // Event logged when a new address is authorized.\n    event AuthorizedAddressAdded(\n        address indexed target,\n        address indexed caller\n    );\n\n    // Event logged when a currently authorized address is unauthorized.\n    event AuthorizedAddressRemoved(\n        address indexed target,\n        address indexed caller\n    );\n\n    /// @dev Only authorized addresses can invoke functions with this modifier.\n    modifier onlyAuthorized { revert(); _; }\n}\n",
        "src/interfaces/IAuthorizable.sol": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.5.5;\n\nimport \"@0x/contracts-utils/contracts/src/interfaces/IOwnable.sol\";\n\n\ncontract IAuthorizable is\n    IOwnable\n{\n    /// @dev Authorizes an address.\n    /// @param target Address to authorize.\n    function addAuthorizedAddress(address target)\n        external;\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    function removeAuthorizedAddress(address target)\n        external;\n\n    /// @dev Removes authorizion of an address.\n    /// @param target Address to remove authorization from.\n    /// @param index Index of target in authorities array.\n    function removeAuthorizedAddressAtIndex(\n        address target,\n        uint256 index\n    )\n        external;\n    \n    /// @dev Gets all authorized addresses.\n    /// @return Array of authorized addresses.\n    function getAuthorizedAddresses()\n        external\n        view\n        returns (address[] memory);\n}\n"
    },
    "sourceTreeHashHex": "0xe8bd046d0499757b332338ff65b95b06d7d412267b6571403198c08d16a7bb59",
    "compiler": {
        "name": "solc",
        "version": "soljson-v0.5.10+commit.5a6ea5b1.js",
        "settings": {
            "optimizer": {
                "enabled": true,
                "runs": 1000000,
                "details": {
                    "yul": true,
                    "deduplicate": true,
                    "cse": true,
                    "constantOptimizer": true
                }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "constantinople",
            "remappings": [
                "@0x/contracts-utils=/Users/fabioberger/Documents/projects/0x_project/0x-monorepo-one/contracts/asset-proxy/node_modules/@0x/contracts-utils"
            ]
        }
    },
    "networks": {}
}
